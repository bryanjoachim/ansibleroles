name: Ansible CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the 'main' branch
  workflow_dispatch: # Allows manual triggering of the workflow from GitHub UI

jobs:
  run-ansible-playbook:
    runs-on: ubuntu-latest # Use a fresh Ubuntu runner for each job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to clone your GitHub repository

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Specify a Python version compatible with Ansible

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible # Install Ansible

      - name: Configure SSH for Ansible
        # This step is crucial for Ansible to connect to your target servers.
        # It assumes you have SSH keys for your target servers stored as GitHub Secrets.
        # Replace `ANSIBLE_SSH_PRIVATE_KEY` with the name of your secret.
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
        
      - name: Run Ansible Playbook
        # Ensure your inventory file (e.g., 'hosts.ini') and playbook.yml are in the repo root
        run: |
          ansible-playbook -i hosts.ini playbook.yml
        env:
          # You might need to pass sensitive variables or credentials as environment variables
          # For example, if your playbook needs a database password, you'd pass it here.
          # DONT_USE_THIS_FOR_SENSITIVE_DATA: "{{ secrets.SOME_OTHER_SECRET }}"
          # For this example, no extra env vars are needed beyond SSH key.
          ANSIBLE_HOST_KEY_CHECKING: "False" # Temporarily disable host key checking for simplicity. Not recommended for production.

      - name: Verify Playbook Execution (Optional)
        # Add tasks here to verify the changes on the target server
        # For example, check if Apache is running or if a file exists
        run: |
          echo "Playbook execution completed. Manual verification on target servers is recommended."
          # Example: ansible slave1 -m shell -a "systemctl is-active httpd"
          # This requires Ansible to be able to connect and run commands again.
